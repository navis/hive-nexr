PREHOOK: query: DESCRIBE FUNCTION NULLIF
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION NULLIF
POSTHOOK: type: DESCFUNCTION
NULLIF(a1, a2) - Returns null if two expressions are equivalent. Returns first argument if it's not
PREHOOK: query: DESCRIBE FUNCTION EXTENDED NULLIF
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED NULLIF
POSTHOOK: type: DESCFUNCTION
NULLIF(a1, a2) - Returns null if two expressions are equivalent. Returns first argument if it's not
Synonyms: nullif
Example:
  > SELECT NULLIF(1, 1) FROM src LIMIT 1;
null
PREHOOK: query: EXPLAIN
SELECT NULLIF(1, 1),
       NULLIF(1, 2),
       NULLIF(NULL, 2),
       NULLIF(1, NULL),
       NULLIF('1', '1'),
       NULLIF('1', '2'),
       NULLIF(NULL, '2'),
       NULLIF('1', NULL),
       NULLIF(1.0, 1.0),
       NULLIF(1.0, 2.0),
       NULLIF(NULL, 2.0),
       NULLIF(1.0, NULL),
       NULLIF(NULL, NULL),
       2 / NULLIF(0.0, 0.0)
FROM src tablesample (1 rows)
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT NULLIF(1, 1),
       NULLIF(1, 2),
       NULLIF(NULL, 2),
       NULLIF(1, NULL),
       NULLIF('1', '1'),
       NULLIF('1', '2'),
       NULLIF(NULL, '2'),
       NULLIF('1', NULL),
       NULLIF(1.0, 1.0),
       NULLIF(1.0, 2.0),
       NULLIF(NULL, 2.0),
       NULLIF(1.0, NULL),
       NULLIF(NULL, NULL),
       2 / NULLIF(0.0, 0.0)
FROM src tablesample (1 rows)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: src
          Row Limit Per Split: 1
          Statistics: Num rows: 0 Data size: 5812 Basic stats: PARTIAL Column stats: COMPLETE
          Select Operator
            expressions: NULLIF(1,1) (type: int), NULLIF(1,2) (type: int), NULLIF(null,2) (type: void), NULLIF(1,null) (type: int), NULLIF('1','1') (type: string), NULLIF('1','2') (type: string), NULLIF(null,'2') (type: void), NULLIF('1',null) (type: string), NULLIF(1.0,1.0) (type: double), NULLIF(1.0,2.0) (type: double), NULLIF(null,2.0) (type: void), NULLIF(1.0,null) (type: double), NULLIF(null,null) (type: void), (2 / NULLIF(0.0,0.0)) (type: double)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13
            Statistics: Num rows: 0 Data size: 5812 Basic stats: PARTIAL Column stats: COMPLETE
            ListSink

PREHOOK: query: SELECT NULLIF(1, 1),
       NULLIF(1, 2),
       NULLIF(NULL, 2),
       NULLIF(1, NULL),
       NULLIF('1', '1'),
       NULLIF('1', '2'),
       NULLIF(NULL, '2'),
       NULLIF('1', NULL),
       NULLIF(1.0, 1.0),
       NULLIF(1.0, 2.0),
       NULLIF(NULL, 2.0),
       NULLIF(1.0, NULL),
       NULLIF(NULL, NULL),
       2 / NULLIF(0.0, 0.0)
FROM src tablesample (1 rows)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT NULLIF(1, 1),
       NULLIF(1, 2),
       NULLIF(NULL, 2),
       NULLIF(1, NULL),
       NULLIF('1', '1'),
       NULLIF('1', '2'),
       NULLIF(NULL, '2'),
       NULLIF('1', NULL),
       NULLIF(1.0, 1.0),
       NULLIF(1.0, 2.0),
       NULLIF(NULL, 2.0),
       NULLIF(1.0, NULL),
       NULLIF(NULL, NULL),
       2 / NULLIF(0.0, 0.0)
FROM src tablesample (1 rows)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
NULL	1	NULL	1	NULL	1	NULL	1	NULL	1.0	NULL	1.0	NULL	NULL
