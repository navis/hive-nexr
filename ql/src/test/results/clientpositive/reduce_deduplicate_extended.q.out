PREHOOK: query: create table t1 (int1 int, int2 int, str1 string, str2 string)
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table t1 (int1 int, int2 int, str1 string, str2 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@t1
PREHOOK: query: create table t2 (int1 int, int2 int, str1 string, str2 string)
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table t2 (int1 int, int2 int, str1 string, str2 string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@t2
PREHOOK: query: explain select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
PREHOOK: type: QUERY
POSTHOOK: query: explain select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL int1))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL Q1) int1)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL Q1) int1)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL Q1) int1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:t1 
          TableScan
            alias: t1
            Select Operator
              expressions:
                    expr: int1
                    type: int
                    expr: int2
                    type: int
                    expr: str1
                    type: string
                    expr: str2
                    type: string
              outputColumnNames: _col0, _col1, _col2, _col3
              Select Operator
                expressions:
                      expr: _col0
                      type: int
                      expr: _col1
                      type: int
                      expr: _col2
                      type: string
                      expr: _col3
                      type: string
                outputColumnNames: _col0, _col1, _col2, _col3
                Select Operator
                  expressions:
                        expr: _col0
                        type: int
                  outputColumnNames: _col0
                  Group By Operator
                    aggregations:
                          expr: sum(_col0)
                    bucketGroup: false
                    keys:
                          expr: _col0
                          type: int
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Reduce Output Operator
                      key expressions:
                            expr: _col0
                            type: int
                      sort order: +
                      Map-reduce partition columns:
                            expr: _col0
                            type: int
                      tag: -1
                      value expressions:
                            expr: _col1
                            type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: int
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: int
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
PREHOOK: type: QUERY
POSTHOOK: query: explain select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (+ (TOK_TABLE_OR_COL int1) 1))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ (. (TOK_TABLE_OR_COL Q1) int1) 1)) (TOK_SELEXPR (TOK_FUNCTION sum (+ (. (TOK_TABLE_OR_COL Q1) int1) 1)))) (TOK_GROUPBY (+ (. (TOK_TABLE_OR_COL Q1) int1) 1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:t1 
          TableScan
            alias: t1
            Select Operator
              expressions:
                    expr: int1
                    type: int
                    expr: int2
                    type: int
                    expr: str1
                    type: string
                    expr: str2
                    type: string
              outputColumnNames: _col0, _col1, _col2, _col3
              Select Operator
                expressions:
                      expr: _col0
                      type: int
                      expr: _col1
                      type: int
                      expr: _col2
                      type: string
                      expr: _col3
                      type: string
                outputColumnNames: _col0, _col1, _col2, _col3
                Select Operator
                  expressions:
                        expr: _col0
                        type: int
                  outputColumnNames: _col0
                  Group By Operator
                    aggregations:
                          expr: sum((_col0 + 1))
                    bucketGroup: false
                    keys:
                          expr: (_col0 + 1)
                          type: int
                    mode: hash
                    outputColumnNames: _col0, _col1
                    Reduce Output Operator
                      key expressions:
                            expr: _col0
                            type: int
                      sort order: +
                      Map-reduce partition columns:
                            expr: _col0
                            type: int
                      tag: -1
                      value expressions:
                            expr: _col1
                            type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: int
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: int
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
PREHOOK: type: QUERY
POSTHOOK: query: explain select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ (TOK_TABLE_OR_COL str1) 'a') X) (TOK_SELEXPR (TOK_TABLE_OR_COL str2)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL int1))) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL int2)))) (TOK_GROUPBY (+ (TOK_TABLE_OR_COL str1) 'a') (TOK_TABLE_OR_COL str2)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL X)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL str2)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t1 
          TableScan
            alias: t1
            Select Operator
              expressions:
                    expr: str1
                    type: string
                    expr: str2
                    type: string
                    expr: int1
                    type: int
                    expr: int2
                    type: int
              outputColumnNames: str1, str2, int1, int2
              Group By Operator
                aggregations:
                      expr: sum(int1)
                      expr: sum(int2)
                bucketGroup: false
                keys:
                      expr: (str1 + 'a')
                      type: double
                      expr: str2
                      type: string
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: double
                        expr: _col1
                        type: string
                  sort order: ++
                  Map-reduce partition columns:
                        expr: _col0
                        type: double
                        expr: _col1
                        type: string
                  tag: -1
                  value expressions:
                        expr: _col2
                        type: bigint
                        expr: _col3
                        type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
                expr: sum(VALUE._col1)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: double
                expr: KEY._col1
                type: string
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Select Operator
            expressions:
                  expr: _col0
                  type: double
                  expr: _col1
                  type: string
                  expr: _col2
                  type: bigint
                  expr: _col3
                  type: bigint
            outputColumnNames: _col0, _col1, _col2, _col3
            Select Operator
              expressions:
                    expr: _col0
                    type: double
                    expr: _col1
                    type: string
                    expr: _col2
                    type: bigint
                    expr: _col3
                    type: bigint
              outputColumnNames: _col0, _col1, _col2, _col3
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
PREHOOK: type: QUERY
POSTHOOK: query: explain select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME t1)) (TOK_TABREF (TOK_TABNAME t2)) (= (. (TOK_TABLE_OR_COL t1) str1) (. (TOK_TABLE_OR_COL t2) str1)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t1) str1)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t1) int1)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t1) str1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t1 
          TableScan
            alias: t1
            Reduce Output Operator
              key expressions:
                    expr: str1
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: str1
                    type: string
              tag: 0
              value expressions:
                    expr: int1
                    type: int
                    expr: str1
                    type: string
        t2 
          TableScan
            alias: t2
            Reduce Output Operator
              key expressions:
                    expr: str1
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: str1
                    type: string
              tag: 1
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col2}
            1 
          handleSkewJoin: false
          outputColumnNames: _col0, _col2
          Select Operator
            expressions:
                  expr: _col2
                  type: string
                  expr: _col0
                  type: int
            outputColumnNames: _col2, _col0
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col2
                    type: string
              mode: mergepartial
              outputColumnNames: _col0, _col1
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: bigint
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-04_099_5771557138679908903/-mr-10000
POSTHOOK: query: select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-04_099_5771557138679908903/-mr-10000
PREHOOK: query: select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-07_048_5660398283633831432/-mr-10000
POSTHOOK: query: select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-07_048_5660398283633831432/-mr-10000
PREHOOK: query: select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-09_963_4744057452857669719/-mr-10000
POSTHOOK: query: select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-09_963_4744057452857669719/-mr-10000
PREHOOK: query: select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-12_764_3904733741678676470/-mr-10000
POSTHOOK: query: select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-12_764_3904733741678676470/-mr-10000
PREHOOK: query: explain select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
PREHOOK: type: QUERY
POSTHOOK: query: explain select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL int1))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL Q1) int1)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL Q1) int1)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL Q1) int1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:t1 
          TableScan
            alias: t1
            Select Operator
              expressions:
                    expr: int1
                    type: int
                    expr: int2
                    type: int
                    expr: str1
                    type: string
                    expr: str2
                    type: string
              outputColumnNames: _col0, _col1, _col2, _col3
              Select Operator
                expressions:
                      expr: _col0
                      type: int
                      expr: _col1
                      type: int
                      expr: _col2
                      type: string
                      expr: _col3
                      type: string
                outputColumnNames: _col0, _col1, _col2, _col3
                Select Operator
                  expressions:
                        expr: _col0
                        type: int
                  outputColumnNames: _col0
                  Reduce Output Operator
                    key expressions:
                          expr: _col0
                          type: int
                    sort order: +
                    Map-reduce partition columns:
                          expr: _col0
                          type: int
                    tag: -1
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(KEY._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: int
          mode: complete
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: int
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
PREHOOK: type: QUERY
POSTHOOK: query: explain select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (+ (TOK_TABLE_OR_COL int1) 1))))) Q1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ (. (TOK_TABLE_OR_COL Q1) int1) 1)) (TOK_SELEXPR (TOK_FUNCTION sum (+ (. (TOK_TABLE_OR_COL Q1) int1) 1)))) (TOK_GROUPBY (+ (. (TOK_TABLE_OR_COL Q1) int1) 1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        q1:t1 
          TableScan
            alias: t1
            Select Operator
              expressions:
                    expr: int1
                    type: int
                    expr: int2
                    type: int
                    expr: str1
                    type: string
                    expr: str2
                    type: string
              outputColumnNames: _col0, _col1, _col2, _col3
              Select Operator
                expressions:
                      expr: _col0
                      type: int
                      expr: _col1
                      type: int
                      expr: _col2
                      type: string
                      expr: _col3
                      type: string
                outputColumnNames: _col0, _col1, _col2, _col3
                Select Operator
                  expressions:
                        expr: _col0
                        type: int
                  outputColumnNames: _col0
                  Reduce Output Operator
                    key expressions:
                          expr: (_col0 + 1)
                          type: int
                    sort order: +
                    Map-reduce partition columns:
                          expr: (_col0 + 1)
                          type: int
                    tag: -1
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(KEY._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: int
          mode: complete
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: int
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
PREHOOK: type: QUERY
POSTHOOK: query: explain select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME t1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ (TOK_TABLE_OR_COL str1) 'a') X) (TOK_SELEXPR (TOK_TABLE_OR_COL str2)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL int1))) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL int2)))) (TOK_GROUPBY (+ (TOK_TABLE_OR_COL str1) 'a') (TOK_TABLE_OR_COL str2)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL X)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL str2)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t1 
          TableScan
            alias: t1
            Select Operator
              expressions:
                    expr: str1
                    type: string
                    expr: str2
                    type: string
                    expr: int1
                    type: int
                    expr: int2
                    type: int
              outputColumnNames: str1, str2, int1, int2
              Reduce Output Operator
                key expressions:
                      expr: (str1 + 'a')
                      type: double
                      expr: str2
                      type: string
                sort order: ++
                Map-reduce partition columns:
                      expr: (str1 + 'a')
                      type: double
                      expr: str2
                      type: string
                tag: -1
                value expressions:
                      expr: int1
                      type: int
                      expr: int2
                      type: int
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
                expr: sum(VALUE._col1)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: double
                expr: KEY._col1
                type: string
          mode: complete
          outputColumnNames: _col0, _col1, _col2, _col3
          Select Operator
            expressions:
                  expr: _col0
                  type: double
                  expr: _col1
                  type: string
                  expr: _col2
                  type: bigint
                  expr: _col3
                  type: bigint
            outputColumnNames: _col0, _col1, _col2, _col3
            Select Operator
              expressions:
                    expr: _col0
                    type: double
                    expr: _col1
                    type: string
                    expr: _col2
                    type: bigint
                    expr: _col3
                    type: bigint
              outputColumnNames: _col0, _col1, _col2, _col3
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: explain select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
PREHOOK: type: QUERY
POSTHOOK: query: explain select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME t1)) (TOK_TABREF (TOK_TABNAME t2)) (= (. (TOK_TABLE_OR_COL t1) str1) (. (TOK_TABLE_OR_COL t2) str1)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL t1) str1)) (TOK_SELEXPR (TOK_FUNCTION sum (. (TOK_TABLE_OR_COL t1) int1)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL t1) str1))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        t1 
          TableScan
            alias: t1
            Reduce Output Operator
              key expressions:
                    expr: str1
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: str1
                    type: string
              tag: 0
              value expressions:
                    expr: int1
                    type: int
                    expr: str1
                    type: string
        t2 
          TableScan
            alias: t2
            Reduce Output Operator
              key expressions:
                    expr: str1
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: str1
                    type: string
              tag: 1
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col2}
            1 
          handleSkewJoin: false
          outputColumnNames: _col0, _col2
          Select Operator
            expressions:
                  expr: _col2
                  type: string
                  expr: _col0
                  type: int
            outputColumnNames: _col2, _col0
            Group By Operator
              aggregations:
                    expr: sum(_col0)
              bucketGroup: false
              keys:
                    expr: _col2
                    type: string
              mode: complete
              outputColumnNames: _col0, _col1
              Select Operator
                expressions:
                      expr: _col0
                      type: string
                      expr: _col1
                      type: bigint
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-16_105_2562191184222177273/-mr-10000
POSTHOOK: query: select Q1.int1, sum(Q1.int1) from (select * from t1 order by int1) Q1 group by Q1.int1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-16_105_2562191184222177273/-mr-10000
PREHOOK: query: select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-19_037_5344417346862734496/-mr-10000
POSTHOOK: query: select (Q1.int1 + 1), sum(Q1.int1 + 1) from (select * from t1 order by (int1 + 1)) Q1 group by (Q1.int1 + 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-19_037_5344417346862734496/-mr-10000
PREHOOK: query: select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-21_862_3227142776634765904/-mr-10000
POSTHOOK: query: select (str1 + 'a') as X, str2, sum(int1), sum(int2) from t1 group by (str1 + 'a'), str2 order by X, str2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-21_862_3227142776634765904/-mr-10000
PREHOOK: query: select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
PREHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-24_568_3030819661850406915/-mr-10000
POSTHOOK: query: select t1.str1, sum(t1.int1) FROM t1 JOIN t2 ON t1.str1 = t2.str1 group by t1.str1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
POSTHOOK: Output: file:/tmp/navis/hive_2012-01-11_20-53-24_568_3030819661850406915/-mr-10000
PREHOOK: query: drop table t1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t1
PREHOOK: Output: default@t1
POSTHOOK: query: drop table t1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t1
POSTHOOK: Output: default@t1
PREHOOK: query: drop table t2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@t2
PREHOOK: Output: default@t2
POSTHOOK: query: drop table t2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@t2
POSTHOOK: Output: default@t2
