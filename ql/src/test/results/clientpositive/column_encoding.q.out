PREHOOK: query: create table encode_test1(id INT, name STRING, phone STRING, address STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('column.encode.columns'='phone,address', 'column.encode.classname'='org.apache.hadoop.hive.serde2.Base64WriteOnly')
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@encode_test1
POSTHOOK: query: create table encode_test1(id INT, name STRING, phone STRING, address STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('column.encode.columns'='phone,address', 'column.encode.classname'='org.apache.hadoop.hive.serde2.Base64WriteOnly')
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@encode_test1
PREHOOK: query: create table encode_test2(id INT, name STRING, phone STRING, address STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('column.encode.indices'='2,3', 'column.encode.classname'='org.apache.hadoop.hive.serde2.Base64Rewriter')
STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@encode_test2
POSTHOOK: query: create table encode_test2(id INT, name STRING, phone STRING, address STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('column.encode.indices'='2,3', 'column.encode.classname'='org.apache.hadoop.hive.serde2.Base64Rewriter')
STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@encode_test2
PREHOOK: query: from src tablesample (2 rows)
insert into table encode_test1 select key,'navis',concat('010-0000-', key), concat('Seoul.', value)
insert into table encode_test2 select key,'navis',concat('010-0000-', key), concat('Seoul.', value)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@encode_test1
PREHOOK: Output: default@encode_test2
POSTHOOK: query: from src tablesample (2 rows)
insert into table encode_test1 select key,'navis',concat('010-0000-', key), concat('Seoul.', value)
insert into table encode_test2 select key,'navis',concat('010-0000-', key), concat('Seoul.', value)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@encode_test1
POSTHOOK: Output: default@encode_test2
POSTHOOK: Lineage: encode_test1.address EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: encode_test1.id EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: encode_test1.name SIMPLE []
POSTHOOK: Lineage: encode_test1.phone EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: encode_test2.address EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: encode_test2.id EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: encode_test2.name SIMPLE []
POSTHOOK: Lineage: encode_test2.phone EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: select * from encode_test1
PREHOOK: type: QUERY
PREHOOK: Input: default@encode_test1
#### A masked pattern was here ####
POSTHOOK: query: select * from encode_test1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@encode_test1
#### A masked pattern was here ####
238	navis	MDEwLTAwMDAtMjM4	U2VvdWwudmFsXzIzOA==
86	navis	MDEwLTAwMDAtODY=	U2VvdWwudmFsXzg2
PREHOOK: query: select * from encode_test2
PREHOOK: type: QUERY
PREHOOK: Input: default@encode_test2
#### A masked pattern was here ####
POSTHOOK: query: select * from encode_test2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@encode_test2
#### A masked pattern was here ####
238	navis	010-0000-238	Seoul.val_238
86	navis	010-0000-86	Seoul.val_86
