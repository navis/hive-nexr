PREHOOK: query: create temporary function os as 'org.apache.hadoop.hive.ql.udf.UDFObjectToString'
PREHOOK: type: CREATEFUNCTION
PREHOOK: Output: os
POSTHOOK: query: create temporary function os as 'org.apache.hadoop.hive.ql.udf.UDFObjectToString'
POSTHOOK: type: CREATEFUNCTION
POSTHOOK: Output: os
PREHOOK: query: create temporary function tv as 'org.apache.hadoop.hive.ql.udf.UDFTypeVariable'
PREHOOK: type: CREATEFUNCTION
PREHOOK: Output: tv
POSTHOOK: query: create temporary function tv as 'org.apache.hadoop.hive.ql.udf.UDFTypeVariable'
POSTHOOK: type: CREATEFUNCTION
POSTHOOK: Output: tv
PREHOOK: query: explain
select os(key), os(cast(key as smallint)), os(cast(key as int)), os(cast(key as float)), os(cast(key as double)), os(cast(key as bigint)) from src tablesample (1 rows)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select os(key), os(cast(key as smallint)), os(cast(key as int)), os(cast(key as float)), os(cast(key as double)), os(cast(key as bigint)) from src tablesample (1 rows)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: src
          Row Limit Per Split: 1
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: os(key) (type: string), os(UDFToShort(key)) (type: string), os(UDFToInteger(key)) (type: string), os(UDFToFloat(key)) (type: string), os(UDFToDouble(key)) (type: string), os(UDFToLong(key)) (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            ListSink

PREHOOK: query: select os(key), os(cast(key as smallint)), os(cast(key as int)), os(cast(key as float)), os(cast(key as double)), os(cast(key as bigint)) from src tablesample (1 rows)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select os(key), os(cast(key as smallint)), os(cast(key as int)), os(cast(key as float)), os(cast(key as double)), os(cast(key as bigint)) from src tablesample (1 rows)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
238	238	238	238.0	238.0	238
PREHOOK: query: explain
select tv(key), tv(cast(key as smallint)), tv(cast(key as int)), tv(cast(key as float)), tv(cast(key as double)), tv(cast(key as bigint)) from src tablesample (1 rows)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select tv(key), tv(cast(key as smallint)), tv(cast(key as int)), tv(cast(key as float)), tv(cast(key as double)), tv(cast(key as bigint)) from src tablesample (1 rows)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: src
          Row Limit Per Split: 1
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: tv(key) (type: string), tv(UDFToShort(key)) (type: smallint), tv(UDFToInteger(key)) (type: int), tv(UDFToFloat(key)) (type: float), tv(UDFToDouble(key)) (type: double), tv(UDFToLong(key)) (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            ListSink

PREHOOK: query: select tv(key), tv(cast(key as smallint)), tv(cast(key as int)), tv(cast(key as float)), tv(cast(key as double)), tv(cast(key as bigint)) from src tablesample (1 rows)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select tv(key), tv(cast(key as smallint)), tv(cast(key as int)), tv(cast(key as float)), tv(cast(key as double)), tv(cast(key as bigint)) from src tablesample (1 rows)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
238	238	238	238.0	238.0	238
PREHOOK: query: explain
select tv(map(value, key)), tv(map(value, cast(key as smallint))), tv(map(value, cast(key as int))), tv(map(value, cast(key as float))), tv(map(value, cast(key as double))),tv(map(value, cast(key as bigint))) from src tablesample (1 rows)
PREHOOK: type: QUERY
POSTHOOK: query: explain
select tv(map(value, key)), tv(map(value, cast(key as smallint))), tv(map(value, cast(key as int))), tv(map(value, cast(key as float))), tv(map(value, cast(key as double))),tv(map(value, cast(key as bigint))) from src tablesample (1 rows)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: src
          Row Limit Per Split: 1
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: tv(map(value:key)) (type: string), tv(map(value:UDFToShort(key))) (type: smallint), tv(map(value:UDFToInteger(key))) (type: int), tv(map(value:UDFToFloat(key))) (type: float), tv(map(value:UDFToDouble(key))) (type: double), tv(map(value:UDFToLong(key))) (type: bigint)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            ListSink

PREHOOK: query: select tv(map(value, key)), tv(map(value, cast(key as smallint))), tv(map(value, cast(key as int))), tv(map(value, cast(key as float))), tv(map(value, cast(key as double))),tv(map(value, cast(key as bigint))) from src tablesample (1 rows)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select tv(map(value, key)), tv(map(value, cast(key as smallint))), tv(map(value, cast(key as int))), tv(map(value, cast(key as float))), tv(map(value, cast(key as double))),tv(map(value, cast(key as bigint))) from src tablesample (1 rows)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
238	238	238	238.0	238.0	238
