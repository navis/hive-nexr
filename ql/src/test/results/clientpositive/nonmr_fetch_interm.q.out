PREHOOK: query: explain
select * from src a left semi join src b on a.key=b.key + 300 order by a.value
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from src a left semi join src b on a.key=b.key + 300 order by a.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_LEFTSEMIJOIN (TOK_TABREF (TOK_TABNAME src) a) (TOK_TABREF (TOK_TABNAME src) b) (= (. (TOK_TABLE_OR_COL a) key) (+ (. (TOK_TABLE_OR_COL b) key) 300)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL a) value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        a 
          TableScan
            alias: a
            Reduce Output Operator
              key expressions:
                    expr: UDFToDouble(key)
                    type: double
              sort order: +
              Map-reduce partition columns:
                    expr: UDFToDouble(key)
                    type: double
              tag: 0
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
        b 
          TableScan
            alias: b
            Select Operator
              expressions:
                    expr: key
                    type: string
              outputColumnNames: key
              Group By Operator
                bucketGroup: false
                keys:
                      expr: key
                      type: string
                mode: hash
                outputColumnNames: _col0
                Reduce Output Operator
                  key expressions:
                        expr: (_col0 + 300)
                        type: double
                  sort order: +
                  Map-reduce partition columns:
                        expr: (_col0 + 300)
                        type: double
                  tag: 1
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Semi Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 
          handleSkewJoin: false
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            Reduce Output Operator
              key expressions:
                    expr: _col1
                    type: string
              sort order: +
              tag: -1
              value expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
      Reduce Operator Tree:
        Extract
          File Output Operator
            compressed: false
            GlobalTableId: 0
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select * from src a left semi join src b on a.key=b.key + 300 order by a.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: select * from src a left semi join src b on a.key=b.key + 300 order by a.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
302	val_302
305	val_305
308	val_308
309	val_309
309	val_309
310	val_310
311	val_311
311	val_311
311	val_311
315	val_315
317	val_317
317	val_317
318	val_318
318	val_318
318	val_318
327	val_327
327	val_327
327	val_327
333	val_333
333	val_333
335	val_335
341	val_341
342	val_342
342	val_342
344	val_344
344	val_344
351	val_351
353	val_353
353	val_353
364	val_364
365	val_365
366	val_366
367	val_367
367	val_367
369	val_369
369	val_369
369	val_369
374	val_374
377	val_377
378	val_378
382	val_382
382	val_382
384	val_384
384	val_384
384	val_384
386	val_386
392	val_392
395	val_395
395	val_395
396	val_396
396	val_396
396	val_396
397	val_397
397	val_397
400	val_400
403	val_403
403	val_403
403	val_403
404	val_404
404	val_404
411	val_411
413	val_413
413	val_413
414	val_414
414	val_414
418	val_418
419	val_419
429	val_429
429	val_429
431	val_431
431	val_431
431	val_431
436	val_436
437	val_437
438	val_438
438	val_438
438	val_438
443	val_443
446	val_446
449	val_449
452	val_452
453	val_453
455	val_455
457	val_457
458	val_458
458	val_458
460	val_460
462	val_462
462	val_462
463	val_463
463	val_463
466	val_466
466	val_466
466	val_466
467	val_467
468	val_468
468	val_468
468	val_468
468	val_468
469	val_469
469	val_469
469	val_469
469	val_469
469	val_469
470	val_470
472	val_472
475	val_475
477	val_477
478	val_478
478	val_478
479	val_479
480	val_480
480	val_480
480	val_480
481	val_481
483	val_483
487	val_487
489	val_489
489	val_489
489	val_489
489	val_489
490	val_490
491	val_491
492	val_492
492	val_492
493	val_493
494	val_494
495	val_495
496	val_496
497	val_497
