PREHOOK: query: CREATE TABLE src_x1(key string, value string)
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE src_x1(key string, value string)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@src_x1
PREHOOK: query: CREATE TABLE src_x2(key string, value string)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ("hbase.columns.mapping" = ":key,cf:string")
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE src_x2(key string, value string)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ("hbase.columns.mapping" = ":key,cf:string")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@src_x2
PREHOOK: query: explain
from src a
insert overwrite table src_x1
select key,value where a.key > 0 AND a.key < 50
insert overwrite table src_x2
select key,value where a.key > 50 AND a.key < 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
from src a
insert overwrite table src_x1
select key,value where a.key > 0 AND a.key < 50
insert overwrite table src_x2
select key,value where a.key > 50 AND a.key < 100
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) a)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME src_x1))) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL value))) (TOK_WHERE (AND (> (. (TOK_TABLE_OR_COL a) key) 0) (< (. (TOK_TABLE_OR_COL a) key) 50)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME src_x2))) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL value))) (TOK_WHERE (AND (> (. (TOK_TABLE_OR_COL a) key) 50) (< (. (TOK_TABLE_OR_COL a) key) 100)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-7 depends on stages: Stage-1 , consists of Stage-4, Stage-3, Stage-5
  Stage-4
  Stage-0 depends on stages: Stage-4, Stage-3, Stage-6
  Stage-2 depends on stages: Stage-0
  Stage-3
  Stage-5
  Stage-6 depends on stages: Stage-5

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        a 
          TableScan
            alias: a
            Filter Operator
              predicate:
                  expr: ((key > 0.0) and (key < 50.0))
                  type: boolean
              Select Operator
                expressions:
                      expr: key
                      type: string
                      expr: value
                      type: string
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  GlobalTableId: 1
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      name: default.src_x1
            Filter Operator
              predicate:
                  expr: ((key > 50.0) and (key < 100.0))
                  type: boolean
              Select Operator
                expressions:
                      expr: key
                      type: string
                      expr: value
                      type: string
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  GlobalTableId: 2
                  table:
                      input format: org.apache.hadoop.hive.hbase.HiveHBaseTableInputFormat
                      output format: org.apache.hadoop.hive.hbase.HiveHBaseTableOutputFormat
                      serde: org.apache.hadoop.hive.hbase.HBaseSerDe
                      name: default.src_x2

  Stage: Stage-7
    Conditional Operator

  Stage: Stage-4
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.src_x1

  Stage: Stage-2
    Stats-Aggr Operator

  Stage: Stage-3
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.src_x1

  Stage: Stage-5
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  name: default.src_x1

  Stage: Stage-6
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####


PREHOOK: query: from src a
insert overwrite table src_x1
select key,value where a.key > 0 AND a.key < 50
insert overwrite table src_x2
select key,value where a.key > 50 AND a.key < 100
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@src_x1
PREHOOK: Output: default@src_x2
POSTHOOK: query: from src a
insert overwrite table src_x1
select key,value where a.key > 0 AND a.key < 50
insert overwrite table src_x2
select key,value where a.key > 50 AND a.key < 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@src_x1
POSTHOOK: Output: default@src_x2
POSTHOOK: Lineage: src_x1.key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_x1.value SIMPLE [(src)a.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from src_x1
PREHOOK: type: QUERY
PREHOOK: Input: default@src_x1
#### A masked pattern was here ####
POSTHOOK: query: select * from src_x1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src_x1
#### A masked pattern was here ####
POSTHOOK: Lineage: src_x1.key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_x1.value SIMPLE [(src)a.FieldSchema(name:value, type:string, comment:default), ]
27	val_27
37	val_37
15	val_15
17	val_17
20	val_20
47	val_47
4	val_4
35	val_35
12	val_12
8	val_8
24	val_24
42	val_42
26	val_26
43	val_43
15	val_15
19	val_19
10	val_10
5	val_5
35	val_35
11	val_11
34	val_34
42	val_42
41	val_41
30	val_30
33	val_33
5	val_5
2	val_2
35	val_35
44	val_44
12	val_12
5	val_5
24	val_24
26	val_26
18	val_18
9	val_9
18	val_18
28	val_28
37	val_37
PREHOOK: query: select * from src_x2
PREHOOK: type: QUERY
PREHOOK: Input: default@src_x2
#### A masked pattern was here ####
POSTHOOK: query: select * from src_x2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src_x2
#### A masked pattern was here ####
POSTHOOK: Lineage: src_x1.key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: src_x1.value SIMPLE [(src)a.FieldSchema(name:value, type:string, comment:default), ]
51	val_51
53	val_53
54	val_54
57	val_57
58	val_58
64	val_64
65	val_65
66	val_66
67	val_67
69	val_69
70	val_70
72	val_72
74	val_74
76	val_76
77	val_77
78	val_78
80	val_80
82	val_82
83	val_83
84	val_84
85	val_85
86	val_86
87	val_87
90	val_90
92	val_92
95	val_95
96	val_96
97	val_97
98	val_98
